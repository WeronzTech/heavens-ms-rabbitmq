name: CI/CD Pipeline for Backend

on:
  push:
    branches:
      - main

env:
  DOCKER_MS_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/heavens-ms
  DOCKER_PROXY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/heavens-ms-proxy

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Microservices Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ env.DOCKER_MS_IMAGE }}:latest

      - name: Build and Push NGINX Proxy Image
        uses: docker/build-push-action@v5
        with:
          context: ./nginx # IMPORTANT: Point to the nginx directory
          push: true
          tags: ${{ env.DOCKER_PROXY_IMAGE }}:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/heavens-ms-js # Use your correct backend directory

            # Pull both new images from Docker Hub
            docker pull ${{ env.DOCKER_MS_IMAGE }}:latest
            docker pull ${{ env.DOCKER_PROXY_IMAGE }}:latest

            # Run the deployment - Docker Compose will handle the zero-downtime rolling update
            docker compose -f docker-compose.prod.yml up -d

            # Prune old, unused Docker images to save space
            docker image prune -af
