# This file is for DEVELOPMENT purposes.
# It uses nodemon for live-reloading and mounts your local code.

version: "3.8"

# Reusable service template for development
x-node-service-dev: &node-service-dev
  build:
    context: .
    dockerfile: Dockerfile # Use the simpler, single-stage Dockerfile
  volumes:
    - .:/app # Mounts local code for live-reloading
    - /app/node_modules # Prevents local node_modules from overwriting container's
  env_file: ./.env # Use the development environment file
  environment:
    - NODE_ENV=development
    - CHOKIDAR_USEPOLLING=true # Helps nodemon detect file changes
    - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672
  networks:
    - heavens-ms-dev-net # Use a separate network for development
  restart: unless-stopped

services:
  # The NGINX proxy for the DEVELOPMENT environment
  # nginx_proxy_dev:
  #   build: ./nginx
  #   container_name: nginx_proxy_dev
  #   restart: unless-stopped
  #   ports:
  #     - "8000:80" # Maps HOST port 8000 to this container's port 80
  #   networks:
  #     - heavens-ms-dev-net
  #   depends_on:
  #     - api-gateway
  #     - auth-service
  #     - client-service
  #     - user-service
  #     - property-service
  #     - inventory-service
  #     - socket-service
  #     - notification-service
  #     - accounts-service

  # Infrastructure services (can be shared or separate)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_dev
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    ports:
      - "15673:15672" # Use a different host port to avoid conflict
      - "5672:5672"
    volumes:
      - rabbitmq-data-dev:/var/lib/rabbitmq
    networks:
      - heavens-ms-dev-net

  redis:
    image: redis:latest
    container_name: redis_dev
    ports:
      - "6379:6379" # Use a different host port
    networks:
      - heavens-ms-dev-net

  # Application microservices for DEVELOPMENT
  api-gateway:
    <<: *node-service-dev
    command: npm run api-gateway # Runs nodemon script
    expose:
      - "8080" # Expose internally for the proxy
    depends_on:
      - rabbitmq
      - redis
      # Add other service dependencies...

  auth-service:
    <<: *node-service-dev
    command: npm run auth-service
    expose:
      - "8080"

  client-service:
    <<: *node-service-dev
    command: npm run client-service
    expose:
      - "8080"

  user-service:
    <<: *node-service-dev
    command: npm run user-service
    expose:
      - "8080"

  property-service:
    <<: *node-service-dev
    command: npm run property-service
    expose:
      - "8080"

  inventory-service:
    <<: *node-service-dev
    command: npm run inventory-service
    expose:
      - "8080"

  socket-service:
    <<: *node-service-dev
    command: npm run socket-service
    expose:
      - "5006" # Use the specific port for the socket service

  notification-service:
    <<: *node-service-dev
    command: npm run notification-service
    expose:
      - "8080"

  accounts-service:
    <<: *node-service-dev
    command: npm run accounts-service
    expose:
      - "8080"

networks:
  heavens-ms-dev-net:
    driver: bridge

volumes:
  rabbitmq-data-dev:
